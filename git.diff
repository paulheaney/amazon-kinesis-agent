diff --git a/pom.xml b/pom.xml
index 2aff89a..43c52c4 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
     <artifactId>amazon-kinesis-agent</artifactId>
     <packaging>jar</packaging>
     <name>Amazon Kinesis Agent</name>
-    <version>1.1.4</version>
+    <version>1.1.5</version>
     <description>Amazon Kinesis Agent runs on customer hosts and continuously monitors a set of log files and sends new data to the Amazon Kinesis Stream and Amazon Kinesis Firehose services in near-real-time.</description>
     <url>https://aws.amazon.com/kinesis</url>
 
@@ -23,7 +23,8 @@
     </licenses>
 
     <properties>
-        <aws-java-sdk.version>1.11.28</aws-java-sdk.version>
+<!--        <aws-java-sdk.version>1.11.28</aws-java-sdk.version>-->
+        <aws-java-sdk.version>1.11.887</aws-java-sdk.version>
     </properties>
 
     <dependencies>
@@ -183,7 +184,7 @@
           <version>2.3.0</version>
         </dependency>
         <dependency>
-          <groupId>sun.xml.bind</groupId>
+          <groupId>com.sun.xml.bind</groupId>
           <artifactId>jaxb-impl</artifactId>
           <version>2.3.0</version>
         </dependency>
@@ -195,7 +196,7 @@
         <dependency>
           <groupId>javax.activation</groupId>
           <artifactId>activation</artifactId>
-          <version>2.3.0</version>
+          <version>1.1.1</version>
         </dependency>
     </dependencies>
 
@@ -246,6 +247,26 @@
             </execution>
           </executions>
         </plugin>
+
+
+          <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-dependency-plugin</artifactId>
+              <executions>
+                  <execution>
+                      <id>copy-dependencies</id>
+                      <phase>prepare-package</phase>
+                      <goals>
+                          <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          <includeScope>runtime</includeScope>
+                      </configuration>
+                  </execution>
+              </executions>
+          </plugin>
+
       </plugins>
     </build>
 
diff --git a/src/com/amazon/kinesis/streaming/agent/AgentContext.java b/src/com/amazon/kinesis/streaming/agent/AgentContext.java
index 2cdfc5e..3e9139f 100644
--- a/src/com/amazon/kinesis/streaming/agent/AgentContext.java
+++ b/src/com/amazon/kinesis/streaming/agent/AgentContext.java
@@ -27,6 +27,9 @@ import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
+import com.amazonaws.client.builder.AwsClientBuilder;
+import com.amazonaws.regions.Region;
+import com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClientBuilder;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -162,10 +165,16 @@ public class AgentContext extends AgentConfiguration implements IMetricsContext
     @VisibleForTesting
     public synchronized AmazonKinesisFirehose getFirehoseClient() {
         if (firehoseClient == null) {
-            firehoseClient = new AmazonKinesisFirehoseClient(
-            		getAwsCredentialsProvider(), getAwsClientConfiguration());
-            if (!Strings.isNullOrEmpty(firehoseEndpoint()))
-                firehoseClient.setEndpoint(firehoseEndpoint());
+//            firehoseClient = new AmazonKinesisFirehoseClient(
+//            		getAwsCredentialsProvider(), getAwsClientConfiguration());
+//            if (!Strings.isNullOrEmpty(firehoseEndpoint()))
+//                firehoseClient.setEndpoint(firehoseEndpoint());
+
+            AwsClientBuilder.EndpointConfiguration endpointConfiguration = new AwsClientBuilder.EndpointConfiguration(firehoseEndpoint(), "eu-west-2");
+
+            firehoseClient = AmazonKinesisFirehoseClientBuilder.standard().withCredentials(getAwsCredentialsProvider())
+                    .withClientConfiguration(getAwsClientConfiguration())
+                    .withEndpointConfiguration(endpointConfiguration).build();
         }
         return firehoseClient;
     }
@@ -174,6 +183,7 @@ public class AgentContext extends AgentConfiguration implements IMetricsContext
         if (kinesisClient == null) {
             kinesisClient = new AmazonKinesisClient(
                     getAwsCredentialsProvider(), getAwsClientConfiguration());
+
             if (!Strings.isNullOrEmpty(kinesisEndpoint()))
             	kinesisClient.setEndpoint(kinesisEndpoint());
         }
